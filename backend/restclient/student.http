
@STUDENT_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5M2JiYzhmMS0zN2IyLTQwYTYtYTkyYy01NzIzZGFjZmYxZTUiLCJlbWFpbCI6ImJyaWFua3VydXVpMzc2OEBnbWFpbC5jb20iLCJyb2xlIjoiU1RVREVOVCIsImlhdCI6MTc1MTgwMTUzMywiZXhwIjoxNzUxODg3OTMzfQ.QtumBAn889jbhQmn7lSVWu-6x3wPeYMuxuYnoiXYAAY
@COURSE_ID=558600e1-c76c-4aad-8f2a-72534ccf413c

@MODULE_ID=e6d99566-5385-4506-b44f-d56fc9e43039

@LESSON_ID=23657448-92cd-4e43-8550-4768be6b6040

@LESSON_ID2=

@ENROLLMENT_ID=ea7c1241-678f-4831-93a1-b398a49acbc4

@USER_ID=93bbc8f1-37b2-40a6-a92c-5723dacff1e5

@QUIZ_ID=2764f9de-cc1c-4d44-9a10-9eca8f30991a

@STUDENT_ID=

@QUESTION_ID=3160d86f-d40f-41c5-9761-0b67e24779eb


@REVIEW_ID=



### Login as student
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "email": "briankuruui3768@gmail.com",
  "password": "student123"
}


### ===== STUDENT ENDPOINTS =====

### Student enrolls in a course
POST http://localhost:3000/enrollments
Authorization: Bearer {{STUDENT_TOKEN}}
Content-Type: application/json

{
  "courseId": "{{COURSE_ID}}"
}

### Student gets their enrollments
GET http://localhost:3000/enrollments/my-enrollments
Authorization: Bearer {{STUDENT_TOKEN}}

### Student gets available courses
GET http://localhost:3000/courses
Authorization: Bearer {{STUDENT_TOKEN}}

### Student gets modules for a course
GET http://localhost:3000/modules/course/{{COURSE_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}

### Student gets lessons for a module
GET http://localhost:3000/lessons/module/{{MODULE_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}

### Student unenrolls from a course
DELETE http://localhost:3000/enrollments/{{ENROLLMENT_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}



### Student: Get my certificates
GET http://localhost:3000/enrollments/certificates/{{USER_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}


### Mark lesson as complete (Student only)
POST http://localhost:3000/enrollments/progress/complete
Authorization: Bearer {{STUDENT_TOKEN}}
Content-Type: application/json

{
  "enrollmentId": "{{ENROLLMENT_ID}}",
  "lessonId": "{{LESSON_ID}}"
}

### Get progress for an enrollment 
GET http://localhost:3000/enrollments/{{ENROLLMENT_ID}}/progress
Authorization: Bearer {{STUDENT_TOKEN}}


### Get my enrollments 
GET http://localhost:3000/enrollments/my-enrollments
Authorization: Bearer {{STUDENT_TOKEN}}


### Get user course stats 
GET http://localhost:3000/progress/{{ENROLLMENT_ID}}
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}

### Get student progress 
GET http://localhost:3000/analytics/student/{{USER_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}



### 2. Get all quizzes for a course 
GET http://localhost:3000/quizzes/course/{{COURSE_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}


// 11. Create a quiz attempt
###
POST http://localhost:3000/quizzes/attempts
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}

{
  "userId": "{{USER_ID}}",
  "quizId": "{{QUIZ_ID}}",
  "answers": [
    { "questionId": "{{QUESTION_ID}}", "answer": "A language" }
  ]
}

### 12. Get my quiz attempts 
GET http://localhost:3000/quizzes/attempts/user/{{USER_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}


### Create a review
POST http://localhost:3000/reviews
Authorization: Bearer {{STUDENT_TOKEN}}
Content-Type: application/json

{
  "rating": 5,
  "comment": "Great course!",
  "userId": "{{USER_ID}}",
  "courseId": "{{COURSE_ID}}"
}

### Get all reviews
GET http://localhost:3000/reviews
Authorization: Bearer {{STUDENT_TOKEN}}

### Get review by ID
GET http://localhost:3000/reviews/{{REVIEW_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}

### Update review
PATCH http://localhost:3000/reviews/{{REVIEW_ID}}
Authorization: Bearer {{STUDENT_TOKEN}}
Content-Type: application/json

{
  "comment": "Updated review comment."
}

### Delete review
DELETE http://localhost:3000/reviews/{{REVIEW_ID}}
Authorization: Bearer {{STUDENT_TOKEN}} 


### Get popular courses 
GET http://localhost:3000/analytics/popular-courses
Authorization: Bearer {{STUDENT_TOKEN}}

### Get student learning path (Student)
GET http://localhost:3000/analytics/student/{{USER_ID}}/learning-path
Authorization: Bearer {{STUDENT_TOKEN}}


### Mark lesson as incomplete (STUDENT only)
POST http://localhost:3000/progress/mark-incomplete
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}

{
  "enrollmentId": "{{ENROLLMENT_ID}}",
  "lessonId": "{{LESSON_ID}}"
}

###

# Bulk mark multiple lessons as complete (STUDENT only)
POST http://localhost:3000/progress/bulk-mark-complete
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}

{
  "lessons": [
    {
      "enrollmentId": "{{ENROLLMENT_ID}}",
      "lessonId": "{{LESSON_ID}}"
    },
    {
      "enrollmentId": "{{ENROLLMENT_ID}}",
      "lessonId": "{{LESSON_ID2}}"
    }
  ]
}


# Get user course progress 
###
GET http://localhost:3000/progress/{{ENROLLMENT_ID}}
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}


###
# Get all course progress for a user 
GET http://localhost:3000/progress/user/{{USER_ID}}/courses
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}



### Get module progress details 
GET http://localhost:3000/progress/module/{{MODULE_ID}}/progress?enrollmentId={{ENROLLMENT_ID}}
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}

### Get progress history for an enrollment 
GET http://localhost:3000/progress/history/{{ENROLLMENT_ID}}?limit=20
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}

### Reset all progress for an enrollment

PUT http://localhost:3000/progress/reset/{{ENROLLMENT_ID}}
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}


# Remove progress for a specific lesson
DELETE http://localhost:3000/progress/lesson/{{ENROLLMENT_ID}}/{{LESSON_ID}}
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}

# Get student progress analytics 
GET http://localhost:3000/progress/analytics/student/{{USER_ID}}?period=month
Content-Type: application/json
Authorization: Bearer {{STUDENT_TOKEN}}